version: "3.6"

services:
  jaeger:
    image: jaegertracing/all-in-one:1.45.0
    container_name: jaeger
    volumes:
      - badger_data:/badger
    expose:
      - "4317"
    ports:
      - "16686:16686"
      - "14250"
      - "0.0.0.0:14268:14268"
    command: |
      --query.additional-headers "Access-Control-Allow-Origin: *"
    environment:
      - SPAN_STORAGE_TYPE=badger
      - COLLECTOR_OTLP_ENABLED=true
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
      - BADGER_SPAN_STORE_TTL=336h0m0s
      - COLLECTOR_GRPC_PORT=5317
      - COLLECTOR_OTLP_GRPC_MAX_MESSAGE_SIZE=41943040
    restart: unless-stopped

#  grafana:
#    container_name: grafana
#    volumes:
#      - ./grafana/provisioning:/etc/grafana/provisioning
#    image: grafana/grafana-oss:latest
#    ports:
#      - 3000:3000
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#      - GF_USERS_ALLOW_SIGN_UP=false
    
#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus:latest
#    volumes:
#      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
      
  collector:
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/otel-local-config.yaml"]
    volumes:
      - ./collector-config.yaml:/otel-local-config.yaml
    ports:
      - "0.0.0.0:4317:4317" # GRPC OTLP receiver
      - "0.0.0.0:8889:8889" # METRICS
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - jaeger
    environment:
      - OTLP_EXPORTER_DIGMA_COLLECTOR_API=host.docker.internal:5050

networks:
  default:
    name: tracing-network

volumes:
  badger_data:
